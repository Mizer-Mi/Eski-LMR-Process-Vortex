<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Apitron.PDF.Rasterizer</name>
  </assembly>
  <members>
    <!-- Badly formed XML comment ignored for member "F:Apitron.Font.Common.Environment.PlatformID.MacOSX" -->
    <!-- Badly formed XML comment ignored for member "P:Apitron.Pdf.Core.InteractiveFeatures.DocumentNavigation.Collections.CollectionFolderDictionary.Next" -->
    <!-- Badly formed XML comment ignored for member "P:Apitron.Pdf.Core.Fdf.FdfDictionary.Target" -->
    <!-- Badly formed XML comment ignored for member "P:Apitron.Pdf.Core.Fdf.FdfFieldDictionary.Opt" -->
    <!-- Badly formed XML comment ignored for member "P:Apitron.Pdf.Core.Fdf.FdfJavaScriptDictionary.AfterStream" -->
    <member name="T:Apitron.PDF.Rasterizer.Configuration.RenderingSettings">
      <summary>
            Controls the drawing engine behavior.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.RenderMode">
      <summary>
             Gets or sets the rendering mode.
             </summary>
      <value>
             The rendering mode used by page renderer.
             </value>
      <Default>
        <see cref="F:Apitron.PDF.Rasterizer.Configuration.RenderMode.HighSpeed" />.
             </Default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.BackgroundColor">
      <summary>
            Gets or sets the color of the background, ARGB value.
            Only color channels values are used, alpha will be ignored.
            </summary>
      <value>
            The color of the background.
            </value>
      <default>
            White color, 0xFFFFFFFF.
            </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.ScaleMode">
      <summary>
            Gets or sets the scale mode used.
            </summary>
      <value>
            The scale mode.
            </value>
      <default>
        <see cref="F:Apitron.PDF.Rasterizer.Configuration.ScaleMode.Absolute" />
      </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.ImageResamplingFilter">
      <summary>
            Gets or sets the image resampler filter.
            </summary>
      <value>
            The resempler filter.
            </value>
      <default>
        <see cref="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.Lanczos" />
      </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.RotationAngle">
      <summary>
            Gets or sets the rotation angle used, if it's not <see cref="F:Apitron.PDF.Rasterizer.Configuration.RotationAngle.Rotate0" /> then additional page rotation will be perfomed(remember that page can have it's own Rotate property).
            </summary>
      <value>
            The rotation angle.
            </value>
      <default>
        <see cref="F:Apitron.PDF.Rasterizer.Configuration.RotationAngle.Rotate0" />
      </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.DrawAnotations">
      <summary>
            Gets or sets a value indicating whether annotation objects should be drawn.
            </summary>
      <value>
        <c>true</c> if annotaions should be drawn; otherwise, <c>false</c>.
            </value>
      <default>
            True.
            </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.AnnotationRenderingSettings">
      <summary>
            Gets or sets the annotation rendering settings.
            </summary>
      <value>
            The annotation rendering settings.
            </value>
      <default>
            Null.
            </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.DrawImages">
      <summary>
            Gets or sets a value indicating whether images should be drawn.
            </summary>
      <value>
        <c>true</c> if images should be drawn; otherwise, <c>false</c>.
            </value>
      <default>
            True.
            </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.DrawText">
      <summary>
            Gets or sets a value indicating whether draw document text.
            </summary>
      <value>
        <c>true</c> if text should be visible; otherwise, <c>false</c>.
            </value>
      <default>
            True.
            </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.DrawPaths">
      <summary>
            Gets or sets a value indicating whether draw document paths.
            </summary>
      <value>
        <c>true</c> if paths should be visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.PrinterMode">
      <summary>
            Gets or sets a value indicating whether document should be processed as it'd be printed.
            Mostly affects annotation objects that have the setting allowing them to be printed or not.
            </summary>
      <value>
        <c>true</c> if printer mode is on; otherwise, <c>false</c>.
            </value>
      <default>
            False.
            </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.UseEmbededICCProfiles">
      <summary>
            Gets or sets a value indicating whether use embeded ICC profiles during document processing.
            </summary>
      <value>
        <c>true</c> if embeded ICC profiles should be used; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Configuration.RenderingSettings" /> class.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.RenderingSettings.CancelRendering">
      <summary>
            Cancels the rendering process.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.RenderMode">
      <summary>
            Defines rendering modes that can be used for PDF page rendering.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.RenderMode.HighSpeed">
      <summary>
            The high speed mode, uses simplified composition for transparent objects. A recommended setting.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.RenderMode.HighQuality">
      <summary>
            Produces high quality ouputs, uses advanced composition for transparent objects.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter">
      <summary>
            Represents possible filters that can be used for image resampling.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.Box">
      <summary>
            Box filter, also known as nearest neighbour.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.Triangle">
      <summary>
            Triangle filter, a Hat.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.BSpline">
      <summary>
            BSpline filter.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.Bicubic">
      <summary>
            Bicubic filter.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.Bell">
      <summary>
            Bell filter,
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.Hermite">
      <summary>
            Hermite filter.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.Mitchell">
      <summary>
            Mitchell filter.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.Lanczos">
      <summary>
            Lanczos filter.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ImageResamplingFilter.None">
      <summary>
            The none filter.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.Resolution">
      <summary>
            Represents a resolution setting container used in <see cref="M:Apitron.PDF.Rasterizer.Page.Render(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)" /> method and its overloads.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.Resolution.DpiX">
      <summary>
            Gets or sets the X dpi, should be greater than zero.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.Resolution.DpiY">
      <summary>
            Gets or sets the Y dpi, should be greater than zero.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.Resolution.#ctor(System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Configuration.Resolution" /> class.
            </summary>
      <param name="dpiX">The dpi x.</param>
      <param name="dpiY">The dpi y.</param>
      <exception cref="T:System.ArgumentException"> If value for dpiX is not greater than zero.</exception>
      <exception cref="T:System.ArgumentException"> If value for dpiY is not greater than zero.</exception>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.RotationAngle">
      <summary>
            Defines possible angles for page rotation.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.RotationAngle.Rotate0">
      <summary>
            Means no rotation, zero degrees.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.RotationAngle.Rotate90">
      <summary>
            Rotate by 90 degrees.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.RotationAngle.Rotate180">
      <summary>
            Rotate by 180 degrees.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.RotationAngle.Rotate270">
      <summary>
            Rotate by 270 degrees.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.ScaleMode">
      <summary>
            Defines possible page content scaling modes.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ScaleMode.Absolute">
      <summary>
            Page content will be fit into given dimensions absolutely, it means that each side of the page will have it's own scaling factor.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.ScaleMode.PreserveAspectRatio">
      <summary>
            Page's aspect ratio will be preserved and content will be fit into given dimensions.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.TiffCompressionMethod">
      <summary>
            Defines possible compression methods that can be used for tiff saving.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.TiffCompressionMethod.LZW">
      <summary>
            Specifies the LZW(Lempel-Ziv-Welch) compression method.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.TiffCompressionMethod.CCIT4">
      <summary>
            Specifies the CCITT4 compression method.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.TiffCompressionMethod.RLE">
      <summary>
            Specifies the RLE compression method.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.TiffCompressionMethod.None">
      <summary>
            Compression is not used.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings">
      <summary>
            Extends basic rendering settings with things specific to TIFF saving.
            </summary>
    </member>
    <member name="E:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.BeforeRenderPage">
      <summary>
            Occurs when the process about to render a page. Using this event is possible to specify exclusive rendering settings or skip the page.
            </summary>
    </member>
    <member name="E:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.AfterRenderPage">
      <summary>
            Occurs when the rendering process has been done. Using this event is possible to modify image data.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.#ctor">
      <summary>
            Initializes a new instance of the TiffRenderingSettings class. 
            The default values for DPI are 144 ( CCIT4 compression method ). 
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.#ctor(Apitron.PDF.Rasterizer.Configuration.TiffCompressionMethod,System.Single,System.Single)">
      <summary>
            Defines possible compression methods that can be used for tiff saving.
            </summary>
      <param name="compression">Sets a value which specifies the compression to be used when saving.</param>
      <param name="dpiX">Adjust the horizontal resolution of rendered images.</param>
      <param name="dpiY">Adjust the vertical resolution of rendered images.</param>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.ConvertToBitonal">
      <summary>
            This delegate will be called if conversion to bitonal should be done by third-party software.
            Has meaning only for <see cref="P:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.Compression" /> = <see cref="F:Apitron.PDF.Rasterizer.Configuration.TiffCompressionMethod.CCIT4" />.
            <para>For more details <see cref="T:Apitron.PDF.Rasterizer.Configuration.ConvertToBitonalDelegate" /> description.</para></summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.Compression">
      <summary>
            Gets or sets the compression method.
            </summary>
      <value>
            The compression methods.
            </value>
      <default>
        <see cref="F:Apitron.PDF.Rasterizer.Configuration.TiffCompressionMethod.CCIT4" />
      </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.DpiY">
      <summary>
            Gets or sets the dpi Y.
            </summary>
      <default>
            144.0
            </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.DpiX">
      <summary>
            Gets or sets the dpi X.
            </summary>
      <value>
            The dpi X.
            </value>
      <default>
            144.0
            </default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings.WhiteColorTolerance">
      <summary>
            Gets or sets the white color brightness level for CCIT4 compression method, since CCIT4 produces bitonal images we need to convert all colors to black or white.
            This setting defines which colors will be considered white by comparing their brightness with the value specified.
            So all colors with brightness greater than defined value will be white and others black.        
            </summary>
      <value>
            The CCIT4 white color brightness level, valid range is [0.0 to 1.0]. Where zero belongs to black and one belongs to white.
            Default value is <b>0.9</b>.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">If value doesn't fall into valid range.</exception>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventHandler">
      <summary>
            This delegate will be called before render a page.
            </summary>
      <param name="args">The <see cref="T:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.AfterRenderPageEventHandler">
      <summary>
            This delegate will be called afeter a page has been rendered.
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.ConvertToBitonalDelegate">
      <summary>
            This delegate will be called if conversion to bitonal should be done by third-party software.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
      <param name="imageData">The image data array of bytes with pixel format BGRA8888(hence a pixel takes 4 bytes), the stride width would be width*4 in this case.</param>
      <param name="resultingWidth">The image width after conversion.</param>
      <param name="resultingHeight">The image height after conversion.</param>
      <returns>The pixel array that has bitonal format i.e one bit per pixel with padding for each image line.</returns>
      <remarks>Bytes per line should be calculated by the formula: ((width &amp;amp; 0x07) != 0 ? (width &gt;&gt; 3) + 1 : width &gt;&gt; 3)</remarks>
      <remarks>Padding(in bits) might be calculated by the formula: BytesPerLine - width</remarks>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.TiffPixelFormat">
      <summary>
            This enum represents a list of allowed image data formats.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.TiffPixelFormat.BGRA8888">
      <summary>
            Represents pixel format BGRA8888(hence a pixel takes 4 bytes)
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.TiffPixelFormat.Bitonal">
      <summary>
            Represents bitonal pixel format (hence a pixel takes 1 bit)
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.AfterRenderPageEventArgs">
      <summary>
            This class represents after page render event args.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.AfterRenderPageEventArgs.Width">
      <summary>
            Gets ot sets the image width(in pixels).
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.AfterRenderPageEventArgs.Height">
      <summary>
            Gets or sets the image height(in pixels).
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.AfterRenderPageEventArgs.ImageData">
      <summary>
            Gets or sets image data. The data reprsents an array of bytes with pixel format BGRA8888(hence a pixel takes 4 bytes). 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.AfterRenderPageEventArgs.PixelFormat">
      <summary>
            Gets the image data pixel format.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs">
      <summary>
            This class represents before page render event args.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.RenderingSettings">
      <summary>
            Gets or sets the rendering settings.
            </summary>
      <value>
            The rendering settings.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.DesiredWidth">
      <summary>
            Gets or sets the width of the resulting image.
            </summary>
      <value>
            The width of the desired.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.DesiredHeight">
      <summary>
            Gets or sets the height of the resulting image.
            </summary>
      <value>
            The height of the desired.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.Resolution">
      <summary>
            Gets the resolution of the resulting image. 
            By default the resolution of the PDF page is set to 72 dpi so if you render the page using its original size you get this resolution.
            This setting allows you to set desired resolution, it's an equavalent to setting a bigger resulting image size.        
            </summary>
      <value>
            The resolution.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.CropBox">
      <summary>
            Gets or sets the crop box defines the region to which the contents of the page shall be clipped (cropped) when rendered.
            </summary>
      <value>
            The crop box.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.ErrorLoger">
      <summary>
            Gets or sets the error loger.
            </summary>
      <value>
            The error loger.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.PageIndex">
      <summary>
            Gets the (zero-based)index of the <see cref="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.Page" />.
            </summary>
      <value>
            The index of the page.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.Page">
      <summary>
            Gets the page that is about to be processed.
            </summary>
      <value>
            The page.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.IsPageSkipped">
      <summary>
            Gets or sets a value indicating whether the <see cref="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.Page" /> is excluded from rendering process.
            </summary>
      <value>
        <c>true</c> if the <see cref="P:Apitron.PDF.Rasterizer.Configuration.BeforeRenderPageEventArgs.Page" /> should be skipped; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.EngineSettings">
      <summary>
            This class represents a mechanism to configure processing of the PDF.  
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.EngineSettings.FontSubstitutionRequestEventHandler">
      <summary>
            This delegate represents a font substitution request event handler.
            </summary>
      <param name="args">The <see cref="T:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="E:Apitron.PDF.Rasterizer.Configuration.EngineSettings.FontSubstitutionRequest">
      <summary>
            Occurs when font substitution request occurred. This event allows user to select a required font mapping.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.EngineSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Configuration.EngineSettings" /> class.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.MemoryAllocationMode">
      <summary>
            Gets or sets the memory allocation mode.
            </summary>
      <value>
            The memory allocation mode to be used by document processor.
            </value>
      <Default>
        <see cref="F:Apitron.PDF.Rasterizer.Configuration.MemoryAllocationMode.Normal" />
      </Default>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.ResourceSizeLimit">
      <summary>
            Defines the resouce size limit in bytes that controls whether the resouce should be loaded to RAM or cached to disk. Valid only if the corressponding setting is set. 
            See <see cref="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.MemoryAllocationMode" /> property.
            </summary>
      <remarks>
            Setting this property has effect only if <see cref="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.MemoryAllocationMode" /> is set to <see cref="F:Apitron.PDF.Rasterizer.Configuration.MemoryAllocationMode.ResourcesLowMemory" />.
            Minimal value is: 1048576 bytes (1 megabyte)
            Default valus is: 5242880 bytes (5 megabytes)
            </remarks>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.GlobalSettings">
      <summary>
            Gets the global settings.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.SystemFontPaths">
      <summary>
            A read-only collection of system folders where the rendering engine tries to find font files by default,
            e.g. for windows it will be %WINDOWS_FOLDER%\fonts.
            If you wish to add custom font search path see <see cref="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.UserFontPaths" /> property.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.UserFontPaths">
      <summary>
            An editable collection of user-defined folders where the pdf kit engine tries to find font files in addition to system folders.
            If the application is opened in trusted mode the paths are expected to be file system based, otherwise they will be processed as isolated storage based paths.
            An <see cref="T:System.ArgumentException" /> will be thrown as a result of attemp to add <c>null</c> or <c>empty</c> value.
            </summary>
      <value>
            Empty by default.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.UserFontMappings">
      <summary>
            Gets a user font mappings dictionary, which can be used to map fonts used in document to a font with a particular name when font substitution happens.
            These mappings are being evaluated in the order of addition when the engine needs to resolve the font.
            Special font names are supported: "*" maps to all fonts. 
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.SubstitutionFontMappings">
      <summary>
            Gets the special font mappings. 
            To add your substition-set please use the following cunstruction:  EngineSettings.FontSubstitutionMapping.Add("KozMinPro-Regular", new string[] { "Kozuka-Mincho-Pro-VI-R", "KozMinProVI-Regular", "MS Mincho", "MS Gothic" });
            Where "KozMinPro-Regular" is pdf font name and the set is font names that will be used during font mapping.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.TraceLog">
      <summary>
            Gets or sets a value indicating whether to trace log.
            </summary>
      <value>
        <c>true</c> if trace log; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.LogWriter">
      <summary>
            Gets or sets the log writer.
            </summary>
      <value>
            The log writer.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.MaxThreadsCount">
      <summary>
            Gets or sets the maximum threads count to be used during processing PDF documents.
            Valid values: 1 - 8.
            </summary>
      <value>
            The maximum threads count.
            </value>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.EngineSettings.RegisterUserFont(System.IO.Stream)">
      <summary>
            Registers the font in library's font cache.       
            </summary>
      <param name="fontDataStream">The font data. Only TrueType(.ttf) and TrueType collection (.ttc) fonts are accepted.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="fontDataStream" /> is null.</exception>
      <exception cref="T:System.FormatException">If there was an error during font registration. It means that the <paramref name="fontDataStream" /> doesn't contain a valid font data.</exception>        s
        </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.EngineSettings.UnregisterUserFonts">
      <summary>
            Unregisters all user fonts from library's font cache.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.EngineSettings.CMYKColorProfile">
      <summary>
            Gets or sets the CMYK ICC color profile.
            </summary>
      <value>
            The CMYK ICC color profile.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs">
      <summary>
            This class represents font substitution request event args.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs.ResolvedFontPath">
      <summary>
            Gets or sets the resolved font path.
            </summary>
      <value>
            The resolved font path.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs.Handled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs" /> is handled.
            </summary>
      <value>
        <c>true</c> if handled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs.OriginalFontName">
      <summary>
            Gets the name of the original font.
            </summary>
      <value>
            The name of the original font.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs.OriginalCMapName">
      <summary>
            Gets the name of the original c map.
            </summary>
      <value>
            The name of the original c map.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs.OriginalFontWeight">
      <summary>
            Gets the original font weight.
            </summary>
      <value>
            The original font weight.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Configuration.FontSubstitutionRequestEventArgs.IsOriginalFontItalic">
      <summary>
            Gets a value indicating whether this instance is original font italic.
            </summary>
      <value>
        <c>true</c> if this instance is original font italic; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.IccColorProfile">
      <summary>
            This class represents an ICC color profile
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Configuration.IccColorProfile.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Configuration.IccColorProfile" /> class.
            </summary>
      <param name="iccColorProfile">The color profile.</param>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Configuration.MemoryAllocationMode">
      <summary>
            Defines memory allocation modes that can be used during PDF processing.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.MemoryAllocationMode.Normal">
      <summary>
            Default memory allocation mode, all resouces are being loaded to RAM.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Configuration.MemoryAllocationMode.ResourcesLowMemory">
      <summary>
            Only resources taking less than <see cref="!:Pdf.Rasterizer.EngineSettings.ResourceSizeLimit" /> will be kept in memory, other resources will be cached to disk.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Document">
      <summary>
            Represents a PDF document that we are going to draw or operate with.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Document.#ctor(System.IO.Stream,Apitron.PDF.Rasterizer.Configuration.EngineSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Document" /> class.
            </summary>
      <param name="stream">The stream to read PDF data from.</param>
      <param name="engineSettings">Engine settings that will be used during document processing.</param>
      <exception cref="T:System.ArgumentNullException">If given stream is null.</exception>
      <exception cref="T:Apitron.PDF.Rasterizer.ErrorHandling.DocumentLoadException">If document can't be loaded because it has invalid structure.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Document.#ctor(System.IO.Stream,System.String,Apitron.PDF.Rasterizer.Configuration.EngineSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Document" /> class.
            </summary>
      <param name="stream">The stream to read PDF data from.</param>
      <param name="password">The password for the document, setting it to null is equal to setting it to an empty string.</param>
      <param name="engineSettings">Engine settings that will be used during document processing.</param>
      <exception cref="T:System.ArgumentNullException">If given stream is null.</exception>
      <exception cref="T:Apitron.PDF.Rasterizer.ErrorHandling.DocumentLoadException">If document can't be loaded  because it has invalid structure or password is not valid for the document.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Document.#ctor(System.IO.Stream,Apitron.PDF.Rasterizer.Security.AuthEventHandler,Apitron.PDF.Rasterizer.Configuration.EngineSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Document" /> class.
            </summary>
      <param name="stream">The stream to read PDF data from.</param>
      <param name="authRequestHandler">The authentication request handler.</param>
      <param name="engineSettings">Engine settings that will be used during document processing.</param>
      <exception cref="T:System.ArgumentNullException">If given stream is null.</exception>
      <exception cref="T:Apitron.PDF.Rasterizer.ErrorHandling.DocumentLoadException">If document can't be loaded  because it has invalid structure or password is not valid for the document.</exception>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Document.SearchIndex">
      <summary>
            Gets the <see cref="P:Apitron.PDF.Rasterizer.Document.SearchIndex" /> for the document.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Document.Pages">
      <summary>
            Gets document's pages, a read-only collection.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Document.Navigator">
      <summary>
            Gets the document navigator.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Document.Bookmarks">
      <summary>
            Gets the document bookmarks.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Document.Fonts">
      <summary>
            Gets all fonts used in document.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Document.DocumentInfo">
      <summary>
            Gets the information about document.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Document.SaveToTiff(System.IO.Stream,Apitron.PDF.Rasterizer.Configuration.TiffRenderingSettings,System.Boolean)">
      <summary>
            Saves document to tiff, all pages will be rendered and added into resulting tiff stream.
            </summary>
      <param name="outputStream">The stream to save data to.</param>
      <param name="settings">The settings object.</param>
      <param name="closeStream">if set to <c>true</c> the output stream will be closed automatically.</param>
      <exception cref="T:System.ArgumentNullException">If <paramref name="outputStream" /> is null or <paramref name="settings" /> instance is null.</exception>
      <exception cref="T:Apitron.PDF.Rasterizer.ErrorHandling.RenderingException">If an error occurs during rendering.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Document.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.DocumentInfo">
      <summary>
            Holds an optional metadata for the document.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.DocumentInfo.ModDate">
      <summary>
            The date and time the document was most recently modified, in human-readable form.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.DocumentInfo.CreationDate">
      <summary>
            The date and time the document was created, in human-readable form.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.DocumentInfo.Title">
      <summary>
            The document’s title.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.DocumentInfo.Creator">
      <summary>
            If the document was converted to PDF from another format,
            the name of the conforming product that created the original document from which it was converted.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.DocumentInfo.Subject">
      <summary>
            The subject of the document.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.DocumentInfo.Producer">
      <summary>
            If the document was converted to PDF from another format, the name of the conforming product that converted it to PDF.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.DocumentInfo.Keywords">
      <summary>
            Keywords associated with the document.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.DocumentInfo.Author">
      <summary>
            The name of the person who created the document.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.DocumentInfo.ParsePdfDate(System.String)">
      <summary>
            Parses PDF date string and returns datetime object.
            Date values used in a PDF shall conform to a standard date format, which closely follows that of the international standard ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824. A date shall be a text string of the form
            (D:YYYYMMDDHHmmSSOHH'mm)
            where:
            YYYY shall be the year
            MM shall be the month (01–12)
            DD shall be the day (01–31)
            HH shall be the hour (00–23)
            mm shall be the minute (00–59)
            SS shall be the second (00–59)
            O shall be the relationship of local time to Universal Time (UT), and shall be denoted by one of the characters PLUS SIGN (U+002B) (+), HYPHEN-MINUS (U+002D) (-), or LATIN CAPITAL LETTER Z (U+005A) (Z) (see below)
            HH followed by APOSTROPHE (U+0027) (') shall be the absolute value of the offset from UT in hours (00–23)
            mm shall be the absolute value of the offset from UT in minutes (00–59).
            The prefix D: shall be present, 
            the year field (YYYY) shall be present and all other fields may be present but only if all of their preceding fields are also present.
            The APOSTROPHE following the hour offset field (HH) shall only be present if the HH field is present. 
            The minute offset field (mm) shall only be present if the APOSTROPHE following the hour offset field (HH) is present. 
            The default values for MM and DD shall be both 01; all other numerical fields shall default to zero values.
            A PLUS SIGN as the value of the O field signifies that local time is later than UT, 
            a HYPHEN-MINUS signifies that local time is earlier than UT, and the LATIN CAPITAL LETTER Z signifies that local time is equal to UT. 
            If no UT information is specified, the relationship of the specified time to UT shall be considered to be GMT.
            Regardless of whether the time zone is specified, the rest of the date shall be specified in local time.
            </summary>
      <param name="date">
            The date string.
            </param>
      <returns>
            Parsed date if conversion was successful, otherwise <see cref="F:System.DateTime.MinValue" />.
            </returns>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.ErrorHandling.DocumentLoadException">
      <summary>
            Indicates that problem has happened during the loading of the document.
            It might be thrown if document has invalid structure of if invalid password was specified.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.ErrorHandling.PageLoadException">
      <summary>
            Indicates that problem has happened during the loading of the page.
            It might be thrown if document has invalid structure or requested page is out of bounds.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger">
      <summary>
            Represents a container for error messages,
            a simple diagnostic tool that may help you to find what was wrong with PDF file during rendering.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger" /> class.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger.ErrorMessages">
      <summary>
            Gets the error messages list.This diagnostic information can be sent to support to simplify investigation process.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.ErrorHandling.RenderingException">
      <summary>
            An exception that might be thrown to indicate that things went wrong with document or page rendering.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.ErrorHandling.RenderingException.#ctor(System.String)">
      <summary>
            An exception that might be thrown to indicate that things went wrong with document ro page rendering.
            </summary>
      <param name="message">The error message that explains the reason for the exception, or an empty string("").</param>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Fonts.Font">
      <summary>
            Wraps characteristics of a font used in a PDF file.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Fonts.Font.State">
      <summary>
            Contains information about font data presence.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Fonts.Font.Name">
      <summary>
            Gets the original name of the font as it could  be found in PDF file.Can be empty.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Fonts.Font.Type">
      <summary>
            Gets the original font's type.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Fonts.Font.ActualFontName">
      <summary>
            Gets the actual name of the font to be used for rendering.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Fonts.Font.ActualFontType">
      <summary>
            Gets the actual type of the font that will be used for rendering.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Fonts.Font.Encoding">
      <summary>
            A font’s encoding is the association between character codes (obtained from text strings that are shown) and glyph descriptions.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Fonts.FontState">
      <summary>
            Indicates the state of the font.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontState.Unresolved">
      <summary>
            This value indicates that font is unresolved and should be mapped to another font.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontState.Resolved">
      <summary>
            This value indicates that font has been succesfully resolved and its <see cref="P:Apitron.PDF.Rasterizer.Fonts.Font.ActualFontName" /> contains meaningful value.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontState.Embedded">
      <summary>
            This value indicates that font is embedded inside the PDF file itself, so no mapping is needed.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Fonts.FontType">
      <summary>
            Represents possible types the font can belong to.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontType.Type0">
      <summary>
            A composite font—a font composed of glyphs from a descendant CIDFont.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontType.Type1">
      <summary>
            A font that defines glyph shapes using Type 1 font technology.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontType.MMType1">
      <summary>
            A multiple master font—an extension of the Type 1 font that allows the generation of a wide variety of typeface styles from a single font.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontType.TrueType">
      <summary>
            The TrueType font format was developed by Apple Computer, Inc.,
            and has been adopted as a standard font format for the Microsoft Windows operating system. Specifications for the TrueType font file format are available in 
            Apple’s TrueType Reference Manual and Microsoft’s TrueType 1.0 Font Files Technical Specification (see Bibliography).
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontType.Type3">
      <summary>
            A font that defines glyphs with streams of PDF graphics operators.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontType.CIDFontType0">
      <summary>
            A CIDFont whose glyph descriptions are based on Type 1 font technology.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontType.CIDFontType2">
      <summary>
            A CIDFont whose glyph descriptions are based on TrueType font technology
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Fonts.FontType.Unknown">
      <summary>
            Font type can't be determined, usually indicates an error.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.ArticleBead">
      <summary>
            This class represents an article bead.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.ArticleBead.NextBead">
      <summary>
            Gets the next bead in the thread. In the last bead, this entry is null.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.ArticleBead.PrevBead">
      <summary>
            Gets the previous bead in the thread. In the first bead, this entry is null.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.ArticleBead.Page">
      <summary>
            Gets the location page.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.ArticleBead.Rect">
      <summary>
            Gets the rectangle specifying the location of this bead on the page.
            The rectangle has the following format: [left top right bottom] in the page's coordinate space.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.ArticleThread">
      <summary>
            This class represents an article thread.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.ArticleThread.Info">
      <summary>
            Gets the article thread information containing information about the thread, such as its title, author, and creation date.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.ArticleThread.FirtsBead">
      <summary>
            Gets the first bead in the thread.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.Bookmark">
      <summary>
            Represents a bookmark object.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.Bookmark.Title">
      <summary>
            Gets the title.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.Bookmark.Children">
      <summary>
            Gets the subtree of bookmarks.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.Bookmark.Destination">
      <summary>
            Gets the bookmark destination.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.Bookmark.GetDestinationRectangle(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)">
      <summary>
             Gets the destination rectangle.
             NOTE: rectangle uses PDF coordinate system i.e Zero is located in the bottom-left corner.
             </summary>
      <example>
        <code lang="cs">
                FileStream stream = new FileStream("sample.pdf", FileMode.Open, FileAccess.Read);
                RenderingSettings renderingSettings = new RenderingSettings();
                using (Document document = new Document(stream))
                {
                    int index = 0;
                    Bookmark bookmarks = document.Bookmarks;
            
                    foreach (Bookmark bookmark in bookmarks.Children)
                    {
                        Page destinationPage = bookmark.Destination;
            
                        // We want to have an image two times bigger than original page size.
                        int desiredWidth = (int)(destinationPage.Width * 2);
                        int desiredHeight = (int)(destinationPage.Height * 2);
                        
                        // Renders the page on a bitmap
                        Bitmap bmp = destinationPage.Render(desiredWidth, desiredHeight, renderingSettings, null);
                        Graphics graphics = Graphics.FromImage(bmp);
            
                        // Gets a rect for desired size
                        Rectangle rectangle = bookmark.GetDestinationRectangle(desiredWidth, desiredHeight, renderingSettings);
            
                        // Draws the rect and saves result.
                        graphics.DrawRectangle(new Pen(Color.Yellow), (float)rectangle.Left, (float)(desiredHeight - rectangle.Top), (float)rectangle.Width, (float)rectangle.Height);
                        bmp.Save(string.Format("img{0}.jpg", index++), ImageFormat.Jpeg);
                    }
                }
             </code>
      </example>
      <param name="desiredWidth">Width of the desired.</param>
      <param name="desiredHeight">Height of the desired.</param>
      <param name="renderingSettings">The rendering settings.</param>
      <returns>Destination area.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.Bookmark.GetDestinationRectangle(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)">
      <summary>
             Gets the destination rectangle.
             NOTE: rectangle uses PDF coordinate system i.e Zero is located in the bottom-left corner.
             </summary>
      <example>
        <code lang="cs">
                FileStream stream = new FileStream("sample.pdf", FileMode.Open, FileAccess.Read);
                RenderingSettings renderingSettings = new RenderingSettings();
                using (Document document = new Document(stream))
                {
                    int index = 0;
                    Bookmark bookmarks = document.Bookmarks;
            
                    foreach (Bookmark bookmark in bookmarks.Children)
                    {
                        Page destinationPage = bookmark.Destination;
            
                        // We want to have an image two times bigger than original page size.
                        Resolution resolution = new Resolution( 144, 144 );
             
                        // Renders the page on a bitmap
                        Bitmap bmp = destinationPage.Render( resolution, renderingSettings, null );
                        Graphics graphics = Graphics.FromImage( bmp );
             
                        // Gets a rect for desired size
                        Rectangle rectangle = bookmark.GetDestinationRectangle( resolution, renderingSettings );
            
                        // Draws the rect and saves result.
                        graphics.DrawRectangle(new Pen(Color.Yellow), (float)rectangle.Left, (float)(bmp.Height - rectangle.Top), (float)rectangle.Width, (float)rectangle.Height);
                        bmp.Save(string.Format("img{0}.jpg", index++), ImageFormat.Jpeg);
                    }
                }
             </code>
      </example>
      <param name="resolution">The resolution.</param>
      <param name="renderingSettings">The rendering settings.</param>
      <returns>Destination area.</returns>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.Origin">
      <summary>
            This enum represents possible start points to move cursor.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.Origin.Begin">
      <summary>
            Move from the begin.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.Origin.End">
      <summary>
            Move from the end.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.Origin.Current">
      <summary>
            Move from the current position.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator">
      <summary>
            This class represents a document navigator.
            </summary>
    </member>
    <member name="E:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.Navigated">
      <summary>
            Occurs when navigation was completed.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.CurrentPage">
      <summary>
            Gets the current page.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.CurrentIndex">
      <summary>
            Gets the index of the current page.
            </summary>
      <value>
            The index of the current page.
            </value>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.Move(System.Int32,Apitron.PDF.Rasterizer.Navigation.Origin)">
      <summary>
            Sets the position within the current navigator.
            </summary>
      <param name="offset">The offset relative to seek origin.</param>
      <param name="origin">The seek origin.</param>
      <returns>Current index.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.MoveForward">
      <summary>
            Moves cursor to next position.
            </summary>
      <returns>Returns true if the operation has been performed successfully otherwise returns false.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.MoveBackward">
      <summary>
            Moves cursor to previous position.
            </summary>
      <returns>Returns true if the operation has been performed successfully otherwise returns false.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.GoToPage(System.Int32)">
      <summary>
            Moves cursor to the specified index
            </summary>
      <param name="pageIndex">Index of the page.</param>
      <returns>Returns true if the operation has been performed successfully otherwise returns false.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.GoToPage(Apitron.PDF.Rasterizer.Page)">
      <summary>
            Moves cursor to the specified <see cref="T:Apitron.PDF.Rasterizer.Page" />.
            </summary>
      <param name="page">The page.</param>
      <returns>Returns true if the operation has been performed successfully otherwise returns false.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.GoToBookmark(Apitron.PDF.Rasterizer.Navigation.Bookmark)">
      <summary>
            Moves cursor to the specified <see cref="T:Apitron.PDF.Rasterizer.Navigation.Bookmark" />.
            </summary>
      <param name="bookmark">The bookmark.</param>
      <returns>Returns true if the operation has been performed successfully otherwise returns false.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.GoToSearchResult(Apitron.PDF.Rasterizer.Search.SearchResultItem)">
      <summary>
            Moves cursor to the specified <see cref="T:Apitron.PDF.Rasterizer.Search.SearchResultItem" />.
            </summary>
      <param name="searchResult">The search result.</param>
      <returns>
            Returns true if the operation has been performed successfully otherwise returns false.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.DocumentNavigator.GoToLink(Apitron.PDF.Rasterizer.Navigation.Link)">
      <summary>
            Moves cursor to the specified <see cref="T:Apitron.PDF.Rasterizer.Navigation.Link" />.
            </summary>
      <param name="link">The link.</param>
      <returns>Returns true if the operation has been performed successfully otherwise returns false.</returns>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.Link">
      <summary>
            This class represents a page's link.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.Link.DestinationUri">
      <summary>
            Gets the destination URI.
            </summary>
      <value>
            The destination URI.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.Link.IsUriLink">
      <summary>
            Gets a value indicating whether this instance is URI link.
            </summary>
      <value>
        <c>true</c> if this instance is URI link; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.Link.IsGoToPageViewLink">
      <summary>
            Gets a value indicating whether this instance is "Go To Page View" link.
            </summary>
      <value>
        <c>true</c> if this instance is "Go To Page View" link; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.Link.GetLocationRectangle(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)">
      <summary>
            Gets the location rectangle of the link itself.
            </summary>
      <param name="pageWidth">Width of the page to calculate the location for.</param>
      <param name="pageHeight">Height of the page to calculate the location for.</param>
      <param name="renderingSettings">The rendering settings object, should be the same as used for corresponding <see cref="M:Apitron.PDF.Rasterizer.Page.Render(Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)" /> method call, if any.</param>
      <returns>Rectangular area where the link is located.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.Link.GetDestinationRectangle(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)">
      <summary>
            Gets linked content's destination rect.
            </summary>
      <param name="desiredWidth">Width of the page to calculate the location for.</param>
      <param name="desiredHeight">Height of the page to calculate the location for.</param>
      <param name="renderingSettings">The rendering settings object, should be the same as used for corresponding <see cref="M:Apitron.PDF.Rasterizer.Page.Render(Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)" /> method call, if any.</param>
      <returns>Rectangular area where the linked content is located.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.Link.GetLocationRectangle(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)">
      <summary>
            Gets the location rectangle of the link itself.
            </summary>
      <param name="resolution">Resolution of the page to calculate the location for.</param>
      <param name="renderingSettings">The rendering settings object, should be the same as used for corresponding <see cref="M:Apitron.PDF.Rasterizer.Page.Render(Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)" /> method call, if any.</param>
      <returns>Rectangular area where the link is located.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.Link.GetDestinationRectangle(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)">
      <summary>
            Gets linked content's destination rect.
            </summary>
      <param name="resolution">Resolution of the page to calculate the location for.</param>
      <param name="renderingSettings">The rendering settings object, should be the same as used for corresponding <see cref="M:Apitron.PDF.Rasterizer.Page.Render(Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)" /> method call, if any.</param>
      <returns>Rectangular area where the linked content is located.</returns>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.DisplayType">
      <summary>
            This enum represents a page's dispaly options.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.Unknown">
      <summary>
            Location is not specified.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.XYZ">
      <summary>
            Display the page designated by page, with the coordinates (left, top) positioned at the upper-left corner of the window and the contents of the page magnified by the factor zoom. 
            A null value for any of the parameters left, top, or zoom specifies that the current value of that parameter shall be retained unchanged. A zoom value of 0 has the same meaning as a null value.
            Used params: Left, Top, Zoom
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.Fit">
      <summary>
            Display the page designated by page, with its contents magnified just enough to fit the entire page within the window both horizontally and vertically. If the required horizontal and vertical 
            magnification factors are different, use the smaller of the two, centering the page within the window in the other dimension.
            Used params: none
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.FitH">
      <summary>
            Display the page designated by page, with the vertical coordinate toppositioned at the top edge of the window and the contents of the page magnified just enough to fit the entire width of the 
            page within the window. A null value for top specifies that the current value of that parameter shall be retained unchanged.
            Used params: Top
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.FitV">
      <summary>        
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height 
            of the page within the window. A null value for left specifies that the current value of that parameter shall be retained unchanged.
            Used params: Left
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.FitR">
      <summary>
            Display the page designated by page, with its contents magnified just enough to fit the rectangle specified by the coordinates left, bottom, right, and top entirely within the window both horizontally and vertically. 
            If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the rectangle within the window in the other dimension.
            Used params: Left, Bottom, Right, Top,
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.FitB">
      <summary>
            Display the page designated by page, with its contents magnified just enough to fit its bounding box entirely within the window both horizontally and vertically. 
            If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the bounding box within the window in the other dimension.
            Used params: none
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.FitBH">
      <summary>
            Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window and the contents of the page magnified just enough to 
            fit the entire width of its bounding box within the window. A null value for top specifies that the current value of that parameter shall be retained unchanged.
            Used params: Top
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Navigation.DisplayType.FitBV">
      <summary>
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough 
            to fit the entire height of its bounding box within the window. A null value for left specifies that the current value of that parameter shall be retained unchanged.
            Used params: Left
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.NavigatedEventArgs">
      <summary>
            This class represents a navigation event args.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Navigation.NavigatedEventArgs.#ctor(Apitron.PDF.Rasterizer.Page,Apitron.PDF.Rasterizer.Page)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Navigation.NavigatedEventArgs" /> class.
            </summary>
      <param name="oldPage">The old page.</param>
      <param name="newPage">The new page.</param>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.NavigatedEventArgs.OldPage">
      <summary>
            Gets the old page.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Navigation.NavigatedEventArgs.NewPage">
      <summary>
            Gets the new page.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Navigation.NavigatedDelegate">
      <summary>
            Occurs when navigation was completed.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Page">
      <summary>
            Represents a page in PDF file.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Page.Label">
      <summary>
            Gets the page label.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.Render(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image using the desired resolution.
            </summary>
      <param name="resolution">The resolution of the resulting image. By default the resolution of the PDF page is set to 72 dpi so if you render the page using its original size you get this resolution. 
            This setting allows you to set desired resolution, it's an equavalent to setting a bigger resulting image size.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="settings" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resolution" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.Render(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Rectangle,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image using the desired resolution.
            </summary>
      <param name="resolution">The resolution of the resulting image. By default the resolution of the PDF page is set to 72 dpi so if you render the page using its original size you get this resolution. 
            This setting allows you to set desired resolution, it's an equavalent to setting a bigger resulting image size.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when rendered.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="settings" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resolution" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.Render(Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image using its width and height as dimensions for resulting image.
            </summary>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.Render(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image.
            </summary>
      <param name="desiredWidth">Width of the resulting image, should be greater than zero.</param>
      <param name="desiredHeight">Height of the resulting image, should be greater than zero.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentException"> If <paramref name="desiredWidth" /> or <paramref name="desiredHeight" /> is zero or less.</exception>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.Render(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Rectangle,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image.
            </summary>
      <param name="desiredWidth">Width of the resulting image, should be greater than zero.</param>
      <param name="desiredHeight">Height of the resulting image, should be greater than zero.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when rendered.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentException"> If <paramref name="desiredWidth" /> or <paramref name="desiredHeight" /> is zero or less.</exception>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.Render(System.Drawing.Bitmap,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an external bitmap with pixel format <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" />.
            </summary>
      <param name="externalBitmap">An external bitmap object which will be used as rendering canvas. Content will be drawn using its dimensions. Can't be null.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>The object passed as <paramref name="externalBitmap" /> representing the content of the page,  if rendering fails null will be returned.
            Any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            </returns>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="externalBitmap" /> is null.</exception>
      <exception cref="T:System.ArgumentException"> If Width or Height of the <paramref name="externalBitmap" /> is zero or less.</exception>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.TransformRegion(Apitron.PDF.Rasterizer.Search.SearchResultRegion,System.Int32,System.Int32,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)">
      <summary>
            Transforms the region specified in original page space, to transformed page space using the <see cref="T:Apitron.PDF.Rasterizer.Configuration.RenderingSettings" /> given for rendering.
            This method can be used for <see cref="T:Apitron.PDF.Rasterizer.Search.SearchResultItem" /> mapping to rendered page.
            </summary>
      <param name="region">The region to transform.</param>
      <param name="desiredWidth">Width of the page to map this region into.</param>
      <param name="desiredHeight">Height of the page to map this region into.</param>
      <param name="settings">The settings used for rendering, you should use the same settings to get a correct mapping between original page and transformed page.
            If for example, you render the page double-sized and want to map a region from original page to this new image, 
            you would need to pass the same settings in order to get correct results.
            </param>
      <returns>Transformed region.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.TransformRegion(Apitron.PDF.Rasterizer.Search.SearchResultRegion,Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)">
      <summary>
            Transforms the region specified in original page space, to transformed page space using the <see cref="T:Apitron.PDF.Rasterizer.Configuration.RenderingSettings" /> given for rendering.
            This method can be used for <see cref="T:Apitron.PDF.Rasterizer.Search.SearchResultItem" /> mapping to rendered page.
            </summary>
      <param name="region">The region to transform.</param>
      <param name="resolution">The resolution of the resulting image. By default the resolution of the PDF page is set to 72 dpi so if you render the page using its original size you get this resolution. 
            This setting allows you to set desired resolution, it's an equivalent to setting a bigger resulting image size.</param>
      <param name="settings">The settings used for rendering, you should use the same settings to get a correct mapping between original page and transformed page.
            If for example, you render the page double-sized and want to map a region from original page to this new image,
            you would need to pass the same settings in order to get correct results.</param>
      <returns>
            Transformed region.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsInts(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image represented by array of integers with pixel format ARGB8888(hence one array element represents one pixel), the stride width would be desiredWidth in this case.
            </summary>
      <param name="resolution">The resolution of the resulting image. By default the resolution of the PDF page is set to 72 dpi so if you render the page using its original size you get this resolution. 
            This setting allows you to set desired resolution, it's an equivalent to setting a bigger resulting image size.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="settings" /> are null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resolution" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsInts(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Rectangle,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image represented by array of integers with pixel format ARGB8888(hence one array element represents one pixel), the stride width would be desiredWidth in this case.
            </summary>
      <param name="resolution">The resolution of the resulting image. By default the resolution of the PDF page is set to 72 dpi so if you render the page using its original size you get this resolution. 
            This setting allows you to set desired resolution, it's an equivalent to setting a bigger resulting image size.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when rendered.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="settings" /> are null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resolution" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsInts(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image represented by array of integers with pixel format ARGB8888(hence one array element represents one pixel), the stride width would be desiredWidth in this case.
            </summary>
      <param name="desiredWidth">Width of the resulting image, should be greater than zero.</param>
      <param name="desiredHeight">Height of the resulting image, should be greater than zero.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentException"> If <paramref name="desiredWidth" /> or <paramref name="desiredHeight" /> are zero or less.</exception>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> are null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsInts(System.Int32,System.Int32,System.Int32[],Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the specified page to an image represented by array of integers with pixel format ARGB8888(hence one array element represents one pixel), the stride width would be desiredWidth in this case.
            </summary>
      <param name="desiredWidth">Width of the resulting image, should be greater than zero.</param>
      <param name="desiredHeight">Height of the resulting image, should be greater than zero.</param>
      <param name="bitmap">The bitmap data. This data should have the size equal to desiredWidth * desiredHeight</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentException">Width and Height can't be negative or zero.</exception>
      <exception cref="T:System.ArgumentNullException">settings</exception>
      <exception cref="T:System.ArgumentException">If <paramref name="desiredWidth" /> or <paramref name="desiredHeight" /> are zero or less.</exception>
            /// <exception cref="T:System.ArgumentNullException">If <paramref name="bitmap" /> is null.</exception><exception cref="T:System.ArgumentNullException">If <paramref name="settings" /> is null.</exception></member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsInts(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Rectangle,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the page to an image represented by array of integers with pixel format ARGB8888(hence one array element represents one pixel), the stride width would be desiredWidth in this case.
            </summary>
      <param name="desiredWidth">Width of the resulting image, should be greater than zero.</param>
      <param name="desiredHeight">Height of the resulting image, should be greater than zero.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when rendered.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentException"> If <paramref name="desiredWidth" /> or <paramref name="desiredHeight" /> are zero or less.</exception>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> are null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsBytes(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the specified page to an image represented by array of bytes with pixel format BGRA8888(hence a pixel takes 4 bytes), the stride width would be desiredWidth*4 in this case.
            </summary>
      <param name="resolution">The resolution of the resulting image. By default the resolution of the PDF page is set to 72 dpi so if you render the page using its original size you get this resolution. 
            This setting allows you to set desired resolution, it's an equivalent to setting a bigger resulting image size.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="settings" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resolution" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsBytes(Apitron.PDF.Rasterizer.Configuration.Resolution,Apitron.PDF.Rasterizer.Rectangle,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the specified page to an image represented by array of bytes with pixel format BGRA8888(hence a pixel takes 4 bytes), the stride width would be desiredWidth*4 in this case.
            </summary>
      <param name="resolution">The resolution of the resulting image. By default the resolution of the PDF page is set to 72 dpi so if you render the page using its original size you get this resolution. 
            This setting allows you to set desired resolution, it's an equivalent to setting a bigger resulting image size.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when rendered.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">If <paramref name="settings" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="resolution" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsBytes(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the specified page to an image represented by array of bytes with pixel format BGRA8888(hence a pixel takes 4 bytes), the stride width would be desiredWidth*4 in this case.
            </summary>
      <param name="desiredWidth">Width of the resulting image, should be greater than zero.</param>
      <param name="desiredHeight">Height of the resulting image, should be greater than zero.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentException"> If <paramref name="desiredWidth" /> or <paramref name="desiredHeight" /> is zero or less.</exception>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsBytes(System.Int32,System.Int32,Apitron.PDF.Rasterizer.Rectangle,Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the specified page to an image represented by array of bytes with pixel format BGRA8888(hence a pixel takes 4 bytes), the stride width would be desiredWidth*4 in this case.
            </summary>
      <param name="desiredWidth">Width of the resulting image, should be greater than zero.</param>
      <param name="desiredHeight">Height of the resulting image, should be greater than zero.</param>
      <param name="cropBox">The crop box defines the region to which the contents of the page shall be clipped (cropped) when rendered.</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentException"> If <paramref name="desiredWidth" /> or <paramref name="desiredHeight" /> is zero or less.</exception>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> is null.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Page.RenderAsBytes(System.Int32,System.Int32,System.Byte[],Apitron.PDF.Rasterizer.Configuration.RenderingSettings,Apitron.PDF.Rasterizer.ErrorHandling.ErrorLogger)">
      <summary>
            Renders the specified page to an image represented by array of bytes with pixel format BGRA8888(hence a pixel takes 4 bytes), the stride width would be desiredWidth*4 in this case.
            </summary>
      <param name="desiredWidth">Width of the resulting image, should be greater than zero.</param>
      <param name="desiredHeight">Height of the resulting image, should be greater than zero.</param>
      <param name="bitmap">The bitmap data. This data should have the size equal to desiredWidth * desiredHeight * 4</param>
      <param name="settings">The rendering settings, can't be null.</param>
      <param name="errorLogger">An optional error logger object.</param>
      <returns>
            A bitmap representing content of the page, any errors encountered will be logged to <paramref name="errorLogger" /> if present.
            If rendering fails null will be returned.
            </returns>
      <exception cref="T:System.ArgumentException"> If <paramref name="desiredWidth" /> or <paramref name="desiredHeight" /> is zero or less.</exception>
      <exception cref="T:System.ArgumentNullException"> If <paramref name="settings" /> is null.</exception>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.PageCollection">
      <summary>
            Represents a collection of document pages.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Apitron.PDF.Rasterizer.Page" /> at the specified index inside the collection.
            </summary>
      <value>
            The <see cref="T:Apitron.PDF.Rasterizer.Page" />.
            </value>
      <param name="index">A zero-based index of a page in a collection.</param>
      <returns>
            Page object if page object was successfully read, otherwise a <see cref="T:Apitron.PDF.Rasterizer.ErrorHandling.PageLoadException" /> will be thrown.
            </returns>
      <exception cref="T:Apitron.PDF.Rasterizer.ErrorHandling.PageLoadException">If page index is out of range or page object can't be read.</exception>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageCollection.Count">
      <summary>
            Gets the pages count.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.PageCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.PageCollection.IndexOf(Apitron.PDF.Rasterizer.Page)">
      <summary>
            Gets the indexes of the specified page.
            </summary>
      <param name="page">The page.</param>
      <returns>Returns a zero-based index of a page.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.PageCollection.GetPage(System.Int32)">
      <summary>
            Gets the page.
            </summary>
      <param name="pageNumber">The page number. From 1 to n</param>
      <returns>Returns a PDF page.</returns>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.PageInfo">
      <summary>
            This class represents a page info.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.Width">
      <summary>        
            The width of the rectangle created by intersecting <see cref="P:Apitron.PDF.Rasterizer.PageInfo.MediaBox" /> and <see cref="P:Apitron.PDF.Rasterizer.PageInfo.CropBox" /> if it's present and applying <see cref="P:Apitron.PDF.Rasterizer.PageInfo.Rotate" /> component.
            It gives you the width of the page's visible area, as it would be displayed into Acrobat Reader.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.Height">
      <summary>        
            The height of the rectangle created by intersecting <see cref="P:Apitron.PDF.Rasterizer.PageInfo.MediaBox" /> and <see cref="P:Apitron.PDF.Rasterizer.PageInfo.CropBox" /> if it's present and applying <see cref="P:Apitron.PDF.Rasterizer.PageInfo.Rotate" /> component.
            It gives you the height of the page's visible area, as it would be displayed into Acrobat Reader.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.Rotate">
      <summary>
            The number of degrees by which the page shall be rotated clockwise when displayed or printed. 
            The value shall be a multiple of 90. Default value: 0.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.ArtBox">
      <summary>
            A rectangle, expressed in default user space units, that shall define the extent of the page’s meaningful content 
            (including potential white space) as intended by the page’s creator.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.BleedBox">
      <summary>
            A rectangle, expressed in default user space units, that shall define the region to which the contents of the page shall be clipped when output in a production environment.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.TrimBox">
      <summary>
            A rectangle, expressed in default user space units, that shall define the intended dimensions of the finished page after trimming.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.CropBox">
      <summary>
            A rectangle, expressed in default user space units, that shall define the visible region of default user space. When the page is displayed or printed, 
            its contents shall be clipped (cropped) to this rectangle and then shall be imposed on the output medium in some implementation-defined manner.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.MediaBox">
      <summary>
            A rectangle, expressed in default user space units, that shall define the boundaries of the physical medium on which the page shall be displayed or printed.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.Links">
      <summary>
            Gets the links.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.PageInfo.IsCanceled">
      <summary>
            Gets or sets a value indicating whether this instance is canceled.
            </summary>
      <value>
        <c>true</c> if this instance is canceled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Rectangle">
      <summary>
            An object that describes rectangular area in PDF coordinate system.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Rectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Rectangle" /> class.
            </summary>
      <param name="left">The left position in points.</param>
      <param name="bottom">The bottom position in points.</param>
      <param name="right">The right position in points.</param>
      <param name="top">The top position in points.</param>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Rectangle.#ctor(System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Rectangle" /> class.
            </summary>
      <param name="rectangle">The rectangle. It is an array in the following format: [left bottom right top]</param>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Rectangle.Width">
      <summary>
            Gets the width of the rectangle.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Rectangle.Height">
      <summary>
            Gets the height of the rectangle.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Rectangle.Right">
      <summary>
            Gets the right position in points.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Rectangle.Top">
      <summary>
            Gets the top position in points.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Rectangle.Bottom">
      <summary>
            Gets the bottom position in points.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Rectangle.Left">
      <summary>
            Gets the left position in points.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Rectangle.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Search.InvalidIndexDataException">
      <summary>
            This exception occures when <see cref="T:Apitron.PDF.Rasterizer.Search.SearchIndex" /> data is invalid.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.InvalidIndexDataException.#ctor">
      <summary>
            This exception occures when <see cref="T:Apitron.PDF.Rasterizer.Search.SearchIndex" /> data is invalid.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.InvalidIndexDataException.#ctor(System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Search.InvalidIndexDataException" /> class.
            </summary>
      <param name="exception">The exception.</param>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Search.OutdatedIndexException">
      <summary>
            This class represnets an excetion that occures when <see cref="T:Apitron.PDF.Rasterizer.Search.SearchIndex" /> data is outdated.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.OutdatedIndexException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Search.OutdatedIndexException" /> class.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Search.SearchHandlerArgs">
      <summary>
            This class represents an event args for the progressive search.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchHandlerArgs.PageIndex">
      <summary>
            Gets the index of the page.
            </summary>
      <value>
            The index of the page.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchHandlerArgs.ResultItems">
      <summary>
            Gets the result items.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchHandlerArgs.IndexInQueue">
      <summary>
            Gets the current index in queue to search.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchHandlerArgs.QueueLength">
      <summary>
            Gets the length of the pages queue to search.
            </summary>
      <value>
            The length of the queue.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchHandlerArgs.CancelSearch">
      <summary>
            Gets or sets a value indicating whether need to cancel progressive search.
            </summary>
      <value>
        <c>true</c> if "cancel search" is set - search process will be canceled ASAP; otherwise, search will be continued.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchHandlerArgs.SearchForward">
      <summary>
            Gets a value indicating whether search should is being performing in forward direction.
            </summary>
      <value>
        <c>true</c> if search direction is forward; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Search.SearchHandler">
      <summary>
            This delegate represents a function that will be called for every page in search queue.
            </summary>
      <param name="handlerArgs">The args.</param>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Search.SearchIndex">
      <summary>
            This class represents a search index for a PDF document.
            </summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.SearchIndex.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Search.SearchIndex" /> class.
            </summary>
      <param name="pdfDocumentStream">The PDF document stream.</param>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.SearchIndex.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Search.SearchIndex" /> class.
            </summary>
      <param name="pdfDocumentStream">The PDF document stream.</param>
      <param name="password">The password.</param>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.SearchIndex.#ctor(System.IO.Stream,Apitron.PDF.Rasterizer.Security.AuthEventHandler)">
      <summary>
            Initializes a new instance of the <see cref="T:Apitron.PDF.Rasterizer.Search.SearchIndex" /> class.
            </summary>
      <param name="pdfDocumentStream">The PDF document stream.</param>
      <param name="authRequestHandler">The authentication request handler.</param>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.SearchIndex.SaveIndex(System.IO.Stream)">
      <summary>
            Saves the search index data into the specified stream.
            </summary>
      <remarks>
            If license is not set, save will work for first three pages only.
            </remarks>
      <param name="outputStream">The output stream.</param>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.SearchIndex.LoadIndex(System.IO.Stream)">
      <summary>
            Loads the search index data from the specified stream.
            </summary>
      <param name="indexStream">The search index stream.</param>
      <remarks>Do not close <see cref="!:indexStream" /> - it will be using for searching.</remarks>
      <returns>New <see cref="T:Apitron.PDF.Rasterizer.Search.SearchIndex" /> instance.</returns>
      <exception cref="T:Apitron.PDF.Rasterizer.Search.OutdatedIndexException">Occures when index data is outdated.</exception>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.SearchIndex.Search(Apitron.PDF.Rasterizer.Search.SearchHandler,System.String,System.Int32,System.Boolean)">
      <summary>
            Searches for a specified text using index data built for a PDF file.
            </summary>
      <param name="handler">The progressive search handler.</param>
      <param name="text">The text to search for.</param>
      <param name="searchFrom">The index to search from.</param>
      <param name="fromTopToBottom">if set to <c>true</c> the search will be performed from top to bottom otherwise if set to <c>false</c> - from bottom to top.</param>
      <returns>
        <c>true</c> means that search has been canceled otherwise <c>false</c></returns>
      <remarks>
            If license is not set, search will work for first three pages only.
            </remarks>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.SearchIndex.Search(Apitron.PDF.Rasterizer.Search.SearchHandler,System.Text.RegularExpressions.Regex,System.Int32,System.Boolean)">
      <summary>
            Searches for a specified text using index data built for a PDF file.
            </summary>
      <param name="handler">The progressive search handler.</param>
      <param name="expression">The expression to be used for searshing.</param>
      <param name="searchFrom">The index to search from.</param>
      <param name="fromTopToBottom">if set to <c>true</c> the search will be performed from top to bottom otherwise if set to <c>false</c> - from bottom to top.</param>
      <returns>
        <c>true</c> means that search has been canceled otherwise <c>false</c></returns>
      <remarks>
            If license is not set, search will work for first three pages only.
            </remarks>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Search.SearchIndex.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Search.SearchResultItem">
      <summary>
            This class represents a search result item.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchResultItem.PageIndex">
      <summary>
            Gets the destination page index.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchResultItem.Title">
      <summary>
            Gets the search result title.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchResultItem.Context">
      <summary>
            Returns the textual context of the search result.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchResultItem.Region">
      <summary>
            Gets the region, defined by <see cref="T:Apitron.PDF.Rasterizer.Search.SearchResultRegion" /> object in original page space.
            These region can later be transformed to a rendered page space if needed by using <see cref="M:Apitron.PDF.Rasterizer.Page.TransformRegion(Apitron.PDF.Rasterizer.Search.SearchResultRegion,System.Int32,System.Int32,Apitron.PDF.Rasterizer.Configuration.RenderingSettings)" /> method. 
            Thus, any search item text can be easily highlighted on a rendered page.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Search.SearchResultRegion">
      <summary>
            This class represents a region of search result
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Search.SearchResultRegion.Blocks">
      <summary>
            Gets the blocks that represents a set of arrays with the following definition for each region: [x0, y0, x1, y1, x2, y2, x3, y3].
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.AuthEventHandler">
      <summary>
            This delegate represents an authentication event handler. 
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.AuthType">
      <summary>
            This enum represents the list of allowed auth types.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Security.AuthType.Password">
      <summary>
            The standard password-based auth type.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Security.AuthType.Certificate">
      <summary>
            The certificate based auth type.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Security.AuthType.UserDefined">
      <summary>
            The user defined auth type.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.AuthEventArgs">
      <summary>
            This class represents an abstract authentication event args.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.AuthEventArgs.AuthType">
      <summary>
            Gets the type of the authentication.
            </summary>
      <value>
            The type of the authentication.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.AuthEventArgs.CancelOnFailure">
      <summary>
            Gets or sets a value indicating whether what to do in case of failure.
            </summary>
      <value>
        <c>true</c> if don't continue attempt to authenticate; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.PasswordAuthEventArgs">
      <summary>
            This class represnets a password base auth event args.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.PasswordAuthEventArgs.Password">
      <summary>
            Gets or sets the password.
            </summary>
      <value>
            The password.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.CertificateAuthEventArgs">
      <summary>
            This class represents a certificate auth event args.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.CertificateAuthEventArgs.Password">
      <summary>
            Gets or sets the password.
            </summary>
      <value>
            The password.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.CertificateAuthEventArgs.CertificateData">
      <summary>
            Gets or sets the certificate data.
            </summary>
      <value>
            The certificate data.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.CertificateAuthEventArgs.Certificate">
      <summary>
            Gets or sets the auth certificate.
            </summary>
      <value>
            The certificate.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.CertificateAuthEventArgs.Chain">
      <summary>
            Gets or sets the auth chain.
            </summary>
      <value>
            The chain.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.CertificateAuthEventArgs.AllowedCertificates">
      <summary>
            Gets the allowed certificates.
            </summary>
      <value>
            The allowed certificates.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.UserDefinedAuthEventArgs">
      <summary>
            This class represents an user defined auth event args.
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.UserDefinedAuthEventArgs.HandlerName">
      <summary>
            Gets the name of the handler.
            </summary>
      <value>
            The name of the handler.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.UserDefinedAuthEventArgs.FilterName">
      <summary>
            Gets the name of the filter.
            </summary>
      <value>
            The name of the filter.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.UserDefinedAuthEventArgs.Properties">
      <summary>
            Gets the properties. This dictionary could be filled with some specified information that will be required during authentification in the <see cref="T:Apitron.PDF.Rasterizer.Security.ICustomSecurityHandler" />.
            </summary>
      <value>
            The custom properties.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.UserDefinedAuthEventArgs.CustomHandler">
      <summary>
            Gets or sets the custom security handler.
            </summary>
      <value>
            The custom handler.
            </value>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.EncryptionLevel">
      <summary>
            This enum defines allowed encryption algorithms.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Security.EncryptionLevel.RC4_40bit">
      <summary>
            Encrypt this document with RC4 40-bit. 
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Security.EncryptionLevel.RC4_128bit">
      <summary>
            Encrypt this document with RC4 128-bit.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Security.EncryptionLevel.AES_128bit">
      <summary>
            Encrypt this document with AES v2 128-bit. (default)
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Security.EncryptionLevel.AES_256bit">
      <summary>
            Encrypt this document with AES v3 256-bit.
            </summary>
    </member>
    <member name="F:Apitron.PDF.Rasterizer.Security.EncryptionLevel.None">
      <summary>
            The application shall not decrypt data but shall direct the input stream to the security handler(<see cref="T:Apitron.PDF.Rasterizer.Security.ICustomSecurityHandler" />) for decryption.
            Should not be used with Standard or Certificate security handlers.
            </summary>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.IExtendedCustomSecurityHandler">
      <summary>
            This interface represents a custom security handler for <see cref="F:Apitron.PDF.Rasterizer.Security.EncryptionLevel.None" /></summary>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Security.IExtendedCustomSecurityHandler.Encrypt(System.Byte[])">
      <summary>
            Encrypts the specified data. Should be implemented only for <see cref="F:Apitron.PDF.Rasterizer.Security.EncryptionLevel.None" /></summary>
      <param name="data">The data to encrypt.</param>
      <returns>The encrypted data.</returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Security.IExtendedCustomSecurityHandler.Decrypt(System.Byte[])">
      <summary>
            Decrypts the specified data. Should be implemented only for <see cref="F:Apitron.PDF.Rasterizer.Security.EncryptionLevel.None" /></summary>
      <param name="data">The data to decrypt.</param>
      <returns>The decrypted data.</returns>
    </member>
    <member name="T:Apitron.PDF.Rasterizer.Security.ICustomSecurityHandler">
      <summary>
            This interface represents a custom security handler
            </summary>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.ICustomSecurityHandler.Name">
      <summary>
            Gets or sets the name of the security handler.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.ICustomSecurityHandler.FilterName">
      <summary>
            Gets or sets the name of the filter.
            </summary>
      <value>
            The name of the filter.
            </value>
    </member>
    <member name="P:Apitron.PDF.Rasterizer.Security.ICustomSecurityHandler.EncryptionLevel">
      <summary>
            Gets or sets the encryption level.
            </summary>
      <value>
            The encryption level.
            </value>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Security.ICustomSecurityHandler.Authenticate(Apitron.PDF.Rasterizer.Security.UserDefinedAuthEventArgs,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>
            Gets the encryption key. This method is invoked when login information are recieved.
            </summary>
      <param name="args">The <see cref="T:Apitron.PDF.Rasterizer.Security.AuthEventArgs" /> instance containing the event data that has been filled during <see cref="T:Apitron.PDF.Rasterizer.Security.AuthEventHandler" /> call.</param>
      <param name="privateData">The private data. This data may be used as an additional information to authentificate.</param>
      <param name="filterName">Name of the filter.</param>
      <returns>
            The encryption key that will be used for encryption.
            Returns null if the authentification is failure.
            </returns>
    </member>
    <member name="M:Apitron.PDF.Rasterizer.Security.ICustomSecurityHandler.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>
            Initializes the encryption. This method is invoked when need to initialize encryption process.
            </summary>
      <param name="privateData">The private data. This data may be used as an additional information to authenticate.</param>
      <param name="filterName">Name of the filter.</param>
      <returns>
            The encryption key that will be used for encryption.
            </returns>
    </member>
    <member name="T:Apitron.Licensing.ApitronLicenseAttribute">
      <summary>
            An attribute used for licensing, every product has its own specialized implementation of this class.
            Its role is to allow a user to set a license string, alternative way is to use <see cref="M:Apitron.Licensing.License.SetLicense(System.String,Apitron.Licensing.LicenseType)" /> function.
            </summary>
    </member>
    <member name="P:Apitron.Licensing.ApitronLicenseAttribute.License">
      <summary>
            Gets the license string.
            </summary>
    </member>
    <member name="T:Apitron.Licensing.License">
      <summary>
            Represents a license object, it can be used for obtaining license state or setting a license.
            License also can be set using specialized version of the <see cref="T:Apitron.Licensing.ApitronLicenseAttribute" />.
            </summary>
    </member>
    <member name="P:Apitron.Licensing.License.LicenseState">
      <summary>
            Gets the state of the license.
            </summary>
      <value>
            The state of the license.
            </value>
    </member>
    <member name="M:Apitron.Licensing.License.SetLicense(System.String,Apitron.Licensing.LicenseType)">
      <summary>
            Sets the license.
            </summary>
      <param name="license">The license string.</param>
      <param name="licenseType">Type of the license. Default value is <see cref="F:Apitron.Licensing.LicenseType.Auto" />.</param>
      <exception cref="T:System.ArgumentException">If license string is null or empty.</exception>
    </member>
    <member name="T:Apitron.Licensing.LicenseType">
      <summary>
            This enum represets the list of allowed license types.
            </summary>
    </member>
    <member name="F:Apitron.Licensing.LicenseType.Auto">
      <summary>
            The auto detection.
            </summary>
    </member>
    <member name="F:Apitron.Licensing.LicenseType.Application">
      <summary>
            The application license type.
            </summary>
    </member>
    <member name="T:Apitron.Licensing.LicenseState">
      <summary>
            Contains possible diagnostic codes that might be set when you apply a license.
            </summary>
    </member>
    <member name="F:Apitron.Licensing.LicenseState.InvalidLicense">
      <summary>
            License you are trying to set is invalid, so it's not the license the component is expecting.
            </summary>
    </member>
    <member name="F:Apitron.Licensing.LicenseState.Accepted">
      <summary>
            It means that license has been accepted by the component.
            </summary>
    </member>
    <member name="F:Apitron.Licensing.LicenseState.LicenseIsExpired">
      <summary>
            Indicates that license is expired, so you have to renew your subscription in order to get this component active again.
            But you still can use it with latest version released prior to expiration.
            </summary>
    </member>
    <member name="T:Apitron.Licensing.RasterizerLicense">
      <summary>
            Represents a license object, it can be used for obtaining license state or setting a license.
            License also can be set using specialized version of the <see cref="T:Apitron.Licensing.ApitronLicenseAttribute" />.
            </summary>
    </member>
    <member name="P:Apitron.Licensing.RasterizerLicense.LicenseState">
      <summary>
            Gets the state of the license.
            </summary>
      <value>
            The state of the license.
            </value>
    </member>
    <member name="M:Apitron.Licensing.RasterizerLicense.SetLicense(System.String)">
      <summary>
            Sets the license.
            </summary>
      <param name="license">The license string.</param>
      <exception cref="T:System.ArgumentException">If license string is null or empty.</exception>
    </member>
    <member name="M:Apitron.Licensing.RasterizerLicense.SetLicense(System.String,Apitron.Licensing.LicenseType)">
      <summary>
            Sets the license.
            </summary>
      <param name="license">The license string.</param>
      <param name="licenseType">Type of the license. Default value is <see cref="F:Apitron.Licensing.LicenseType.Auto" />.</param>
      <exception cref="T:System.ArgumentException">If license string is null or empty.</exception>
    </member>
    <member name="T:Apitron.Licensing.ApitronPDFRasterizerLicenseAttribute">
      <summary>
            A PDF rasterizer specialized version of the <see cref="T:Apitron.Licensing.ApitronLicenseAttribute" />.See base class desctiption for usage details.
            </summary>
    </member>
    <member name="M:Apitron.Licensing.ApitronPDFRasterizerLicenseAttribute.#ctor(System.String)">
      <param name="license">The license string you've been provided.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Amib.Threading.IWorkItemsGroup.QueueWorkItem``1(Amib.Threading.Func{``0})" -->
    <!-- Badly formed XML comment ignored for member "M:Amib.Threading.IWorkItemsGroup.QueueWorkItem``2(Amib.Threading.Func{``0,``1},``0)" -->
    <!-- Badly formed XML comment ignored for member "M:Amib.Threading.IWorkItemsGroup.QueueWorkItem``3(Amib.Threading.Func{``0,``1,``2},``0,``1)" -->
    <!-- Badly formed XML comment ignored for member "M:Amib.Threading.IWorkItemsGroup.QueueWorkItem``4(Amib.Threading.Func{``0,``1,``2,``3},``0,``1,``2)" -->
    <!-- Badly formed XML comment ignored for member "M:Amib.Threading.IWorkItemsGroup.QueueWorkItem``5(Amib.Threading.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3)" -->
    <!-- Badly formed XML comment ignored for member "T:Amib.Threading.IWaitableResult" -->
    <!-- Badly formed XML comment ignored for member "T:Amib.Threading.IWorkItemResult`1" -->
    <!-- Badly formed XML comment ignored for member "F:Amib.Threading.SmartThreadPool.DefaultFillStateWithArgs" -->
    <!-- Badly formed XML comment ignored for member "P:Amib.Threading.WIGStartInfo.FillStateWithArgs" -->
    <member name="T:SmartAssembly.Attributes.PoweredByAttribute">
      <exclude />
    </member>
  </members>
</doc>